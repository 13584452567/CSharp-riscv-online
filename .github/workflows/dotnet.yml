# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      upload-paths:
        description: 'Comma-separated list of files or globs to upload after publish (relative to repo root). Default: publish directory for each runtime.'
        required: false
        default: ''
      project-path:
        description: 'Path to the project (.csproj) to publish (relative to repo root).'
        required: false
        default: 'RiscVAssembler/RiscVAssembler.csproj'

jobs:
  build:
    name: Build, Publish and Upload
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            rid: linux-x64
          - os: ubuntu-latest
            rid: linux-arm64
          - os: macos-latest
            rid: osx-x64
          - os: macos-latest
            rid: osx-arm64
          - os: windows-latest
            rid: win-x64
          - os: windows-latest
            rid: win-arm64

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 10.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Publish self-contained AOT (per RID)
      # publish each runtime as self-contained AOT build so it can be run on target OS without dotnet installed
      run: |
        set -e
        PROJECT_PATH="${{ github.event.inputs.project-path }}"
        echo "Publishing project: $PROJECT_PATH for RID=${{ matrix.rid }} (AOT)"
        dotnet publish "$PROJECT_PATH" -c Release -r ${{ matrix.rid }} --self-contained true -p:PublishAot=true -p:PublishTrimmed=true -o "$GITHUB_WORKSPACE/artifacts/${{ matrix.rid }}"
      shell: bash

    - name: Prepare upload list
      id: prep
      run: |
        if [ -n "${{ github.event.inputs.upload-paths }}" ]; then
          echo "paths=${{ github.event.inputs.upload-paths }}" >> $GITHUB_OUTPUT
        else
          echo "paths=artifacts/${{ matrix.rid }}/**" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: List published files
      run: |
        echo "Uploading the following files for RID=${{ matrix.rid }}:"
        ls -R "$GITHUB_WORKSPACE/artifacts/${{ matrix.rid }}" || true
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: publish-${{ matrix.rid }}
        path: ${{ steps.prep.outputs.paths }}
